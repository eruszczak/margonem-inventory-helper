# Generated by Django 2.0.2 on 2018-02-11 17:29

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legbon', models.CharField(blank=True, choices=[('holytouch', 'dotyk'), ('dmgred', 'fizyczna'), ('verycrit', 'cbk'), ('resgain', 'ochrona'), ('critred', 'krytyczna'), ('lastheal', 'ostatni'), ('pushback', 'odrzut'), ('curse', 'klatwa')], max_length=15, verbose_name='Bonus')),
                ('rarity', models.CharField(choices=[('legendary', 'Legendarny'), ('unique', 'Unikatowy'), ('heroic', 'Heroiczny'), ('default', 'Zwykły')], default='default', max_length=15, verbose_name='Rzadkość')),
                ('type', models.IntegerField(choices=[(1, 'Jednoręczne'), (2, 'Dwuręczne'), (3, 'Półtoraręczne'), (4, 'Dystansowe'), (5, 'Pomocnicze'), (6, 'Różdzki'), (7, 'Laski'), (8, 'Zbroje'), (9, 'Hełmy'), (10, 'Buty'), (11, 'Rękawice'), (12, 'Pierścienie'), (13, 'Naszyjniki'), (14, 'Tarcze'), (15, 'Neutralne'), (16, 'Konsumpcyjne'), (17, 'Złoto'), (18, 'Klucze'), (19, 'Questowe'), (20, 'Odnawialne'), (21, 'Strzały'), (22, 'Talizmany'), (23, 'Książki'), (24, 'Torby'), (25, 'Mikstury'), (26, 'Eventowe')], verbose_name='Typ')),
                ('stats', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Statystyki')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualizowano')),
                ('hidden', models.BooleanField(default=False, verbose_name='Ukryty')),
                ('lvl', models.PositiveIntegerField(blank=True, null=True, verbose_name='Lvl')),
                ('bag', models.PositiveIntegerField(blank=True, null=True, verbose_name='Miejsc na przedmioty')),
                ('hidden_stats', models.BooleanField(default=False, verbose_name='Niezidentyfikowany')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Nazwa')),
                ('opis', models.TextField(blank=True, null=True, verbose_name='Opis')),
                ('img', models.ImageField(upload_to='', verbose_name='Grafika')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('img_url', models.URLField(max_length=255, verbose_name='Źródło grafiki')),
                ('source_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Źródło przedmiotu')),
                ('lowcrit', models.PositiveIntegerField(blank=True, null=True, verbose_name='Podczas obrony szansa na cios krytyczny przeciwnika jest mniejsza')),
                ('crit', models.PositiveIntegerField(blank=True, null=True, verbose_name='Cios krytyczny')),
                ('critval', models.IntegerField(blank=True, null=True, verbose_name='Siła krytyka fizycznego')),
                ('critmval', models.IntegerField(blank=True, null=True, verbose_name='Siła krytyka magicznego')),
                ('amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ilość (Nie można dzielić)')),
                ('hpbon', models.FloatField(blank=True, null=True, verbose_name='Punkty życia za punkt hp')),
                ('heal', models.PositiveIntegerField(blank=True, null=True, verbose_name='Przywraca punktów życia podczas walki')),
                ('hp', models.IntegerField(blank=True, null=True, verbose_name='Życie')),
                ('ds', models.IntegerField(blank=True, null=True, verbose_name='Siła')),
                ('dz', models.IntegerField(blank=True, null=True, verbose_name='Zręczność')),
                ('di', models.IntegerField(blank=True, null=True, verbose_name='Inteligencja')),
                ('da', models.IntegerField(blank=True, null=True, verbose_name='Wszystkie cechy')),
                ('ac', models.PositiveIntegerField(blank=True, null=True, verbose_name='Pancerz')),
                ('pierceb', models.PositiveIntegerField(blank=True, null=True, verbose_name='Szanse na zablokowanie przebicia')),
                ('adest', models.PositiveIntegerField(blank=True, null=True, verbose_name='Zadaje obrażenia właścicielowi')),
                ('blok', models.IntegerField(blank=True, null=True, verbose_name='Blok')),
                ('absorbm', models.PositiveIntegerField(blank=True, null=True, verbose_name='Absorpcje magiczne')),
                ('absorb', models.PositiveIntegerField(blank=True, null=True, verbose_name='Absorpcje fizyczne')),
                ('slow', models.FloatField(blank=True, null=True, verbose_name='Obniża SA przeciwnika')),
                ('sa', models.IntegerField(blank=True, null=True, verbose_name='SA')),
                ('evade', models.IntegerField(blank=True, null=True, verbose_name='Unik')),
                ('lowevade', models.PositiveIntegerField(blank=True, null=True, verbose_name='Podczas ataku unik przeciwnika jest mniejszy')),
                ('acdmg', models.PositiveIntegerField(blank=True, null=True, verbose_name='Niszczenie punktów pancerza podczas ciosu')),
                ('dmg', models.CharField(blank=True, max_length=20, null=True, verbose_name='Atak')),
                ('light', models.CharField(blank=True, max_length=20, null=True, verbose_name='Obrażenia od błyskawic')),
                ('fire', models.PositiveIntegerField(blank=True, null=True, verbose_name='Obrażenia od ognia')),
                ('frost', models.PositiveIntegerField(blank=True, null=True, verbose_name='Obrażenia od zimna')),
                ('frost_slowed', models.FloatField(blank=True, null=True, verbose_name='spowalnia cel od zimna')),
                ('endest', models.PositiveIntegerField(blank=True, null=True, verbose_name='Niszczenie energii')),
                ('manadest', models.PositiveIntegerField(blank=True, null=True, verbose_name='Niszczenie many')),
                ('manabon', models.PositiveIntegerField(blank=True, null=True, verbose_name='Mana')),
                ('energybon', models.PositiveIntegerField(blank=True, null=True, verbose_name='Energia')),
                ('resfire', models.IntegerField(blank=True, null=True, verbose_name='Odporność na ogień')),
                ('reslight', models.IntegerField(blank=True, null=True, verbose_name='Odporność na błyskawice')),
                ('resfrost', models.IntegerField(blank=True, null=True, verbose_name='Odporność na zimno')),
                ('act', models.IntegerField(blank=True, null=True, verbose_name='Odporność na truciznę')),
                ('resdmg', models.PositiveIntegerField(blank=True, null=True, verbose_name='Obniżenie odporności podczas ataku')),
                ('leczy', models.IntegerField(blank=True, null=True, verbose_name='Leczy punktów życia')),
                ('pierce', models.PositiveIntegerField(blank=True, null=True, verbose_name='Przebicie pancerza')),
                ('upg', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ulepszenie procentowe')),
                ('ttl', models.PositiveIntegerField(blank=True, null=True, verbose_name='Zniknie za .. minut')),
                ('abdest', models.PositiveIntegerField(blank=True, null=True, verbose_name='Niszczenie absorpcji przed atakiem')),
                ('contra', models.PositiveIntegerField(blank=True, null=True, verbose_name='Szanse na kontrę po krytyku')),
                ('ammo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ilość')),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maksimum sztuk razem')),
                ('gold', models.PositiveIntegerField(blank=True, null=True, verbose_name='Złoto')),
                ('respred', models.PositiveIntegerField(blank=True, null=True, verbose_name='Przyśpiesza wracanie do siebie')),
                ('pdmg', models.PositiveIntegerField(blank=True, null=True, verbose_name='Atak fizyczny')),
                ('fullheal', models.PositiveIntegerField(blank=True, null=True, verbose_name='Pełne leczenie')),
                ('runes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Dodaje smoczych run')),
                ('creditsbon', models.PositiveIntegerField(blank=True, null=True, verbose_name='Dodaje smoczych łusek')),
                ('timelimit', models.PositiveIntegerField(blank=True, null=True, verbose_name='Można używać co')),
                ('poison', models.PositiveIntegerField(blank=True, null=True, verbose_name='Obrażenia od trucizny')),
                ('poison_slowed', models.FloatField(blank=True, null=True, verbose_name='spowolnia cel od trucizny')),
                ('wound', models.PositiveIntegerField(blank=True, null=True, verbose_name='Głęboka rana, szanse')),
                ('wound_chance', models.FloatField(blank=True, null=True, verbose_name='Głęboka rana, obrażenia')),
                ('afterheal', models.PositiveIntegerField(blank=True, null=True, verbose_name='Wyleczenie po walce, obrażenia')),
                ('afterheal_chance', models.PositiveIntegerField(blank=True, null=True, verbose_name='Wyleczenie po walce, szanse')),
                ('resp', models.PositiveIntegerField(blank=True, null=True, verbose_name='Czas odnowienia')),
                ('perheal', models.IntegerField(blank=True, null=True, verbose_name='Leczy % życia')),
                ('resacdmg', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ochrona przed niszczeniem pancerza')),
                ('lowheal2turns', models.IntegerField(blank=True, null=True, verbose_name='Obniżenie leczenia turowego przeciwnika na 2 tury')),
                ('resmanaendest', models.PositiveIntegerField(blank=True, null=True, verbose_name='Obniżanie niszczenia many')),
                ('resmanaendest_ene', models.PositiveIntegerField(blank=True, null=True, verbose_name='Obniżanie niszczenia energii')),
                ('lowcritallval', models.PositiveIntegerField(blank=True, null=True, verbose_name='Obniżenie mocy krytyka fizycznego i magicznego')),
                ('worth', models.PositiveIntegerField(blank=True, null=True, verbose_name='Wartość')),
                ('action', models.CharField(blank=True, max_length=30, null=True, verbose_name='Special action')),
                ('npc_lootbon', models.PositiveIntegerField(blank=True, null=True, verbose_name='Special stat')),
            ],
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='profession',
            field=models.ManyToManyField(blank=True, related_name='Items', to='items.Profession'),
        ),
    ]
